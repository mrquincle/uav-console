{
  "author": {
    "name": "AJ ONeal",
    "email": "coolaj86@gmail.com",
    "url": "http://coolaj86.info"
  },
  "name": "pakmanager",
  "description": "A demo package manager using the pakman API.",
  "version": "0.11.8",
  "homepage": "https://github.com/coolaj86/node-pakman",
  "repository": {
    "type": "git",
    "url": "git://github.com/coolaj86/node-pakman.git"
  },
  "main": "lib/index",
  "lib": "lib",
  "bin": {
    "pakmanager": "bin/pakmanager.js"
  },
  "scripts": {
    "test": "pakmanager"
  },
  "engines": {
    "node": ">=0.4"
  },
  "dependencies": {
    "pakman": ">=0.11.5 <0.12.0",
    "argparse": ">=0.1.5 <0.2.0"
  },
  "devDependencies": {},
  "readme": "pakmanager\n===\n\nAn example (and fully functional) package manager built on the [`pakman`](http://github.com/coolaj86/node-pakman) and `npm` APIs.\n\nInstallation\n===\n\nIf you haven't already set your NPM author info, now you should:\n\n    npm set init.author.name \"Your Name\"\n    npm set init.author.email \"you@example.com\"\n    npm set init.author.url \"http://yourblog.com\"\n\n    npm adduser\n\nAnd install pakmanager:\n\n    npm install -g pakmanager\n\nUsage\n===\n\nIn short: run `pakmanager build` wherever `package.json` exists\n\nCreate your project\n\n    PROJECT=~/Code/some-project\n    mkdir -p ${PROJECT}/lib\n    cd ${PROJECT}\n    touch lib/index.js\n    npm init\n\nNOTE: Your code will be wrapped in a strict-mode closure - so don't use \"The Bad Parts\" TM such as using `this` to refer to the global object. See [jshint](http://jshint.com).\n\n    (function () { \"use strict\";\n      var module = { exports: {} };\n      /*** your code pasted here ***/ \n      provide('providename', module);\n    }());\n\nMark as private if need be by editing `package.json` and adding `\"private\": true,`\n\nTest and build your module\n\n    pakmanager deps\n    pakmanager build\n    # edit pakmanaged-test.js\n    # open pakmanaged.html to see about any errors\n\nAnd you might want to publish your module\n\n    npm publish ./\n\n\nCLI / API\n===\n\n    pakmanager deps       # list all dependencies\n    pakmanager build      # builds package.json.browserDependencies and package.json.main\n\n    rm -rf pakmanaged.js ./node_modules # clean old builds\n\nTODO\n===\n\nlinting\n\njshint code and report errors\n\nAdd to API\n\n    pakmanager init       # creates / updates package.json\n    pakmanager install    # installs package.json.browserDependencies into ./node_modules\n    pakmanager clean      # rm -rf ./node_modules\n    pakmanager rebuild    # clean, build\n    pakmanager add        # add module@ver to package.json.browserDependencies\n    pakmanager set        # set module@ver in package.json.browserDependencies\n",
  "_id": "pakmanager@0.11.8",
  "dist": {
    "shasum": "560769827659827a013e163a44c8567ee85f634f"
  },
  "_from": "pakmanager"
}
