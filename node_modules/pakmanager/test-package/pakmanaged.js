var global = Function("return this;")();
/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
(function () {
  "use strict";

  var oldRequire = require
    , modules = {}
    ;

  function newRequire(modulename) {
    var err
      , mod
      , metamod
      ;

    try {
      mod = oldRequire(modulename);
    } catch(e) {
      err = e;
    }

    if (mod) {
      return mod;
    }

    metamod = modules[modulename];
    
    if (metamod) {
      mod = metamod();
      return mod;
    }

    // make it possible to require 'process', etc
    mod = global[modulename];

    if (mod) {
      return mod;
    }

    console.error(modulename);
    throw err;
  }

  function provide(modulename, factory) {
    var modReal
      ;

    function metamod() {
      if (modReal) {
        return modReal;
      }

      if (!factory.__pakmanager_factory__) {
        modReal = factory;
        return factory;
      }

      if (factory.__factoryIsResolving) {
        console.error('Your circular dependencies are too powerful!');
        return factory.__moduleExports;
      }

      factory.__factoryIsResolving = true;
      factory.__moduleExports = {};
      modReal = factory(factory.__moduleExports);
      factory.__factoryIsResolving = false;

      return modReal;
    }

    modules[modulename] = metamod;
    // somewhat of a dirty hack since I don't have a plug for loading the "main" module otherwise
    modules['pakmanager.main'] = metamod;
  }

  require = newRequire;
  global.require = newRequire;
  global.provide = provide;
}());

// pakmanager:test-package/baz
(function (context) {
  function factory(exports) {
  
  var module = { exports: exports }
    ;
  
  /*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
    (function () {
      "use strict";
    
      console.log('baz');
    
      module.exports.fump = function () {
        var bar =  require('test-package/bar');
      };
    }());
    
    return module.exports;
  }
  factory.__pakmanager_factory__ = true;
  provide("test-package/baz", factory);
}(global));

// pakmanager:test-package/foo
(function (context) {
  function factory(exports) {
  
  var module = { exports: exports }
    ;
  
  /*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
    (function () {
      "use strict";
    
      var bar =  require('test-package/bar');
      console.log('foo', bar);
    
      setTimeout(function () {
        console.log('foo2', bar);
      }, 10);
    
      module.exports.x = 'y';
    }());
    
    return module.exports;
  }
  factory.__pakmanager_factory__ = true;
  provide("test-package/foo", factory);
}(global));

// pakmanager:test-package/bar
(function (context) {
  function factory(exports) {
  
  var module = { exports: exports }
    ;
  
  /*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
    (function () {
      "use strict";
    
      var foo =  require('test-package/foo');
      console.log('bar', foo);
    
      setTimeout(function () {
        console.log('bar2', foo);
      }, 10);
    
      module.exports.fump = function () {
        var baz =  require('test-package/baz');
      };
    }());
    
    return module.exports;
  }
  factory.__pakmanager_factory__ = true;
  provide("test-package/bar", factory);
}(global));

// pakmanager:test-package
(function (context) {
  function factory(exports) {
  
  var module = { exports: exports }
    ;
  
  /*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
    (function () {
      "use strict";
    
      var fs = require('fs')
        , foo =  require('test-package/foo')
        , bar =  require('test-package/bar')
        , baz =  require('test-package/baz')
        //, connect = require('connect')
        , server
        ;
    
        /*
      server = connect.createServer()
        .use(connect.static('./'))
        .use(connect.directory('./'))
        ;
        */
    
      /*
      server.listen(4400, function () {
        console.log(server.address());
      });
      */
    
      console.log('hello');
    }());
    
    return module.exports;
  }
  factory.__pakmanager_factory__ = true;
  provide("test-package", factory);
}(global));
require("pakmanager.main");